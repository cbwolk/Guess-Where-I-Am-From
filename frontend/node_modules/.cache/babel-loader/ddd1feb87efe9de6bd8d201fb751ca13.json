{"ast":null,"code":"import _assertThisInitialized from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _toConsumableArray from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aidan/Desktop/COMP20 Group Project/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar Question =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Question, _Component);\n\n  function Question(props) {\n    var _this;\n\n    _classCallCheck(this, Question);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Question).call(this, props)); // Default all answers to false\n\n    var answers = [];\n\n    for (var i = 0; i < _this.props.options.length; i++) {\n      answers.push(false);\n    } // Set initial state\n\n\n    _this.state = {\n      answers: answers\n    };\n    return _this;\n  }\n\n  _createClass(Question, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var options = this.props.options.map(function (option, index) {\n        return React.createElement(\"label\", {\n          key: index,\n          className: \"CheckmarkLabel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \" \", option, React.createElement(\"input\", {\n          type: \"checkbox\",\n          onChange: function onChange(e) {\n            // Update answers state\n            var answers = _toConsumableArray(_this2.state.answers);\n\n            answers[index] = e.target.checked;\n\n            _this2.setState({\n              answers: answers\n            }, function () {\n              _this2.props.onAnswerChange(_this2.props.id, _this2.state.answers);\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"Checkmark\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        className: \"QuestionContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.props.question), React.createElement(\"div\", {\n        className: \"CheckboxContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, options));\n    }\n  }]);\n\n  return Question;\n}(Component);\n\nvar questions = [{\n  question: \"Which childhood toys do you remember playing with?\",\n  options: [\"Hess Truck\", \"Slinky\", \"Etch A Sketch\"]\n}, {\n  question: \"Which of these fast food joints have you been to?\",\n  options: [\"Sonic\", \"McDonald's\", \"Bojangles'\", \"Burger King\", \"Chipotle\"]\n}];\n\nvar App =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(App, _Component2);\n\n  function App(props) {\n    var _this3;\n\n    _classCallCheck(this, App);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    var answers = [];\n\n    for (var i = 0; i < questions.length; i++) {\n      var q = questions[i];\n      var arr = [];\n\n      for (var _i = 0; _i < q.options.length; _i++) {\n        arr.push(true);\n      }\n\n      answers.push(arr);\n    }\n\n    _this3.state = {\n      answers: answers\n    };\n    _this3.handleAnswerChange = _this3.handleAnswerChange.bind(_assertThisInitialized(_this3));\n    _this3.handleSubmit = _this3.handleSubmit.bind(_assertThisInitialized(_this3));\n    return _this3;\n  }\n\n  _createClass(App, [{\n    key: \"handleAnswerChange\",\n    value: function handleAnswerChange(id, answers) {\n      var a = _toConsumableArray(this.state.answers);\n\n      a[id] = answers;\n      this.setState({\n        answers: a\n      });\n      console.log('Question ' + id + ' answers changed to ' + JSON.stringify(answers));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      console.log('');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var questionEls = questions.map(function (question, index) {\n        return React.createElement(Question, {\n          id: index,\n          key: index,\n          question: question.question,\n          options: question.options,\n          onAnswerChange: function onAnswerChange(id, answers) {\n            _this4.handleAnswerChange(id, answers);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"ContentWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ContentContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, questionEls, React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this4.handleSubmit();\n        },\n        className: \"SubmitButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/aidan/Desktop/COMP20 Group Project/frontend/src/App.js"],"names":["React","Component","Question","props","answers","i","options","length","push","state","map","option","index","e","target","checked","setState","onAnswerChange","id","question","questions","App","q","arr","handleAnswerChange","bind","handleSubmit","a","console","log","JSON","stringify","questionEls"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\n\nclass Question extends Component {\n\n    constructor(props) {\n        super(props);\n\n        // Default all answers to false\n        let answers = [];\n        for (let i = 0; i < this.props.options.length; i++) {\n            answers.push(false);\n        }\n\n        // Set initial state\n        this.state = {\n            answers: answers\n        }\n    }\n\n\n    render() {\n\n        const options = this.props.options.map((option, index) =>\n            <label\n                key={index}\n                className=\"CheckmarkLabel\"\n            > {option}\n                <input\n                    type=\"checkbox\"\n                    onChange={(e) => {\n                        // Update answers state\n                        let answers = [...this.state.answers];\n                        answers[index] = e.target.checked;\n                        this.setState({answers: answers}, () => {\n                            this.props.onAnswerChange(this.props.id, this.state.answers);\n                        });\n                    }}\n                ></input>\n                <span className=\"Checkmark\"></span>\n            </label>\n        );\n\n        return (\n            <div className=\"QuestionContainer\">\n                <h1>{this.props.question}</h1>\n                <div className=\"CheckboxContainer\">\n                    {options}\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\nconst questions = [\n    {\n        question: \"Which childhood toys do you remember playing with?\",\n        options: [\"Hess Truck\", \"Slinky\", \"Etch A Sketch\"]\n    },\n    {\n        question: \"Which of these fast food joints have you been to?\",\n        options: [\"Sonic\", \"McDonald's\", \"Bojangles'\", \"Burger King\", \"Chipotle\"]\n    },\n]\n\n\n\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let answers = [];\n        for (let i = 0; i < questions.length; i++) {\n            const q = questions[i];\n            let arr = [];\n            for (let i = 0; i < q.options.length; i++) {\n                arr.push(true);\n            }\n            answers.push(arr);\n        }\n\n        this.state = {\n            answers: answers\n        }\n\n        this.handleAnswerChange = this.handleAnswerChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleAnswerChange(id, answers) {\n        let a = [...this.state.answers];\n        a[id] = answers;\n        this.setState({\n            answers: a\n        })\n        console.log('Question ' + id + ' answers changed to ' + JSON.stringify(answers));\n\n    }\n\n    handleSubmit() {\n\n        console.log('')\n    }\n\n    render() {\n\n        const questionEls = questions.map((question, index) =>\n            <Question\n                id={index}\n                key={index}\n                question={question.question}\n                options={question.options}\n                onAnswerChange={(id, answers) => {\n                    this.handleAnswerChange(id, answers);\n                }}\n            />\n        );\n\n        return (\n            <div className=\"ContentWrapper\">\n                <div className=\"ContentContainer\">\n                    {questionEls}\n                    <button\n                        onClick={() => {\n                            this.handleSubmit();\n                        }}\n                        className=\"SubmitButton\">\n                        Submit\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}