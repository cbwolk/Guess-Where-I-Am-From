{"ast":null,"code":"import _assertThisInitialized from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _toConsumableArray from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aidan/Desktop/COMP20 Group Project/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar Question =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Question, _Component);\n\n  function Question(props) {\n    var _this;\n\n    _classCallCheck(this, Question);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Question).call(this, props)); // Default all answers to false\n\n    var answers = [];\n\n    for (var i = 0; i < _this.props.options.length; i++) {\n      answers.push(false);\n    } // Set initial state\n\n\n    _this.state = {\n      answers: answers\n    };\n    return _this;\n  }\n\n  _createClass(Question, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var options = this.props.options.map(function (option, index) {\n        return React.createElement(\"label\", {\n          key: index,\n          className: \"CheckmarkLabel\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \" \", option, React.createElement(\"input\", {\n          type: _this2.props.type,\n          name: _this2.props.id,\n          onChange: function onChange(e) {\n            // Update answers state\n            var answers = _toConsumableArray(_this2.state.answers);\n\n            answers[index] = e.target.checked;\n\n            _this2.setState({\n              answers: answers\n            }, function () {\n              _this2.props.onAnswerChange(_this2.props.id, _this2.state.answers);\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"Checkmark type-\" + _this2.props.type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        className: \"QuestionContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.props.question), React.createElement(\"div\", {\n        className: \"CheckboxContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, options));\n    }\n  }]);\n\n  return Question;\n}(Component);\n\nvar questions = [{\n  question: \"Which childhood toys do you remember playing with?\",\n  options: [\"Hess Truck\", \"Slinky\", \"Etch A Sketch\"],\n  type: 'radio'\n}, {\n  question: \"Which of these fast food joints have you been to?\",\n  options: [\"Sonic\", \"McDonald's\", \"Bojangles'\", \"Burger King\", \"Chipotle\"],\n  type: 'checkbox'\n}];\n\nvar App =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(App, _Component2);\n\n  function App(props) {\n    var _this3;\n\n    _classCallCheck(this, App);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    var answers = [];\n\n    for (var i = 0; i < questions.length; i++) {\n      var q = questions[i];\n      var arr = [];\n\n      for (var _i = 0; _i < q.options.length; _i++) {\n        arr.push(false);\n      }\n\n      answers.push(arr);\n    }\n\n    _this3.state = {\n      answers: answers\n    };\n    _this3.handleAnswerChange = _this3.handleAnswerChange.bind(_assertThisInitialized(_this3));\n    _this3.handleSubmit = _this3.handleSubmit.bind(_assertThisInitialized(_this3));\n    return _this3;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      fetch(\"http://localhost:5000/get-questions\").then(function (res) {\n        return res.json();\n      }).then(function (questions) {\n        console.log(questions);\n      });\n    } // Handle answer change by updating the state variable\n\n  }, {\n    key: \"handleAnswerChange\",\n    value: function handleAnswerChange(id, answers) {\n      var a = _toConsumableArray(this.state.answers);\n\n      a[id] = answers;\n      this.setState({\n        answers: a\n      });\n    } // Handle submit of all answers\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      console.log('Sending this information to the server:', JSON.stringify(this.state.answers, null, 2));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var questionEls = questions.map(function (question, index) {\n        return React.createElement(Question, {\n          id: index,\n          key: index,\n          question: question.question,\n          options: question.options,\n          type: question.type,\n          onAnswerChange: function onAnswerChange(id, answers) {\n            _this4.handleAnswerChange(id, answers);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"ContentWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ContentContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, questionEls, React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this4.handleSubmit();\n        },\n        className: \"SubmitButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/aidan/Desktop/COMP20 Group Project/frontend/src/App.js"],"names":["React","Component","Question","props","answers","i","options","length","push","state","map","option","index","type","id","e","target","checked","setState","onAnswerChange","question","questions","App","q","arr","handleAnswerChange","bind","handleSubmit","fetch","then","res","json","console","log","a","JSON","stringify","questionEls"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\n\nclass Question extends Component {\n\n    constructor(props) {\n        super(props);\n\n        // Default all answers to false\n        let answers = [];\n        for (let i = 0; i < this.props.options.length; i++) {\n            answers.push(false);\n        }\n\n        // Set initial state\n        this.state = {\n            answers: answers\n        }\n    }\n\n\n    render() {\n\n        const options = this.props.options.map((option, index) =>\n            <label\n                key={index}\n                className=\"CheckmarkLabel\"\n            > {option}\n                <input\n                    type={this.props.type}\n                    name={this.props.id}\n                    onChange={(e) => {\n                        // Update answers state\n                        let answers = [...this.state.answers];\n                        answers[index] = e.target.checked;\n                        this.setState({answers: answers}, () => {\n                            this.props.onAnswerChange(this.props.id, this.state.answers);\n                        });\n                    }}\n                ></input>\n                <span className={\"Checkmark type-\" + this.props.type}></span>\n            </label>\n        );\n\n        return (\n            <div className=\"QuestionContainer\">\n                <h1>{this.props.question}</h1>\n                <div className=\"CheckboxContainer\">\n                    {options}\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n\nconst questions = [\n    {\n        question: \"Which childhood toys do you remember playing with?\",\n        options: [\"Hess Truck\", \"Slinky\", \"Etch A Sketch\"],\n        type: 'radio',\n    },\n    {\n        question: \"Which of these fast food joints have you been to?\",\n        options: [\"Sonic\", \"McDonald's\", \"Bojangles'\", \"Burger King\", \"Chipotle\"],\n        type: 'checkbox',\n    },\n];\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let answers = [];\n        for (let i = 0; i < questions.length; i++) {\n            const q = questions[i];\n            let arr = [];\n            for (let i = 0; i < q.options.length; i++) {\n                arr.push(false);\n            }\n            answers.push(arr);\n        }\n\n        this.state = {\n            answers: answers\n        }\n\n        this.handleAnswerChange = this.handleAnswerChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentWillMount() {\n        fetch(\"http://localhost:5000/get-questions\")\n            .then(res => res.json())\n            .then(\n            (questions) => {\n              console.log(questions)\n            }\n        );\n    }\n\n    // Handle answer change by updating the state variable\n    handleAnswerChange(id, answers) {\n        let a = [...this.state.answers];\n        a[id] = answers;\n        this.setState({\n            answers: a,\n        });\n    }\n\n    // Handle submit of all answers\n    handleSubmit() {\n        console.log('Sending this information to the server:', JSON.stringify(this.state.answers, null, 2));\n    }\n\n    render() {\n\n        const questionEls = questions.map((question, index) =>\n            <Question\n                id={index}\n                key={index}\n                question={question.question}\n                options={question.options}\n                type={question.type}\n                onAnswerChange={(id, answers) => {\n                    this.handleAnswerChange(id, answers);\n                }}\n            />\n        );\n\n        return (\n            <div className=\"ContentWrapper\">\n                <div className=\"ContentContainer\">\n                    {questionEls}\n                    <button\n                        onClick={() => {\n                            this.handleSubmit();\n                        }}\n                        className=\"SubmitButton\">\n                        Submit\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}