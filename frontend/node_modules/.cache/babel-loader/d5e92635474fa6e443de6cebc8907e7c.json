{"ast":null,"code":"import _classCallCheck from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aidan/Desktop/COMP20 Group Project/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aidan/Desktop/COMP20 Group Project/frontend/src/ResultsMap.js\";\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper, Polygon } from 'google-maps-react';\nimport Borders from './StateBorders.js';\nexport var MapContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapContainer, _Component);\n\n  function MapContainer(props) {\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapContainer).call(this, props));\n    _this.state = {\n      guess: _this.props.guess,\n      polygons: []\n    };\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"render\",\n    value: function render() {\n      console.log('RENDER', this.props.guess);\n      var polygons = [];\n      Object.keys(Borders).forEach(function (key) {\n        var weight = typeof this.props.guess === 'undefined' ? 0 : this.props.guess[key];\n        console.log('weight:', weight);\n        var coords = Borders[key].Coordinates;\n        console.log('state:', key);\n        var color = Math.round(weight * 3600); //let colorStr = 'hsl(' + color + ', 100%, 50%)';\n\n        var colorStr = ['red', 'green', 'purple'][Math.floor(Math.random() * 3)];\n        console.log(color, colorStr);\n        polygons.push(React.createElement(Polygon, {\n          key: key,\n          paths: coords,\n          strokeColor: \"#fff\",\n          strokeOpacity: 0.8,\n          strokeWeight: 1,\n          fillColor: colorStr,\n          fillOpacity: 0.35,\n          onClick: function onClick() {\n            console.log('click', key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }));\n      }.bind(this));\n      return React.createElement(Map, {\n        google: this.props.google,\n        style: {\n          width: '100%',\n          height: '100%',\n          position: 'relative'\n        },\n        className: 'map',\n        zoom: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, polygons);\n    }\n  }]);\n\n  return MapContainer;\n}(Component);\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyAVQ-sy1G7aUQWxuTZjNsW0I6IBzcNocmQ'\n})(MapContainer);","map":{"version":3,"sources":["/Users/aidan/Desktop/COMP20 Group Project/frontend/src/ResultsMap.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","Polygon","Borders","MapContainer","props","state","guess","polygons","console","log","Object","keys","forEach","key","weight","coords","Coordinates","color","Math","round","colorStr","floor","random","push","bind","google","width","height","position","apiKey"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,GAAR,EAAaC,UAAb,EAAyBC,MAAzB,EAAiCC,gBAAjC,EAAmDC,OAAnD,QAAiE,mBAAjE;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,WAAaC,YAAb;AAAA;AAAA;AAAA;;AAEI,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,MAAKF,KAAL,CAAWE,KADT;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAFe;AAMlB;;AARL;AAAA;AAAA,6BAUa;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKL,KAAL,CAAWE,KAAjC;AACA,UAAIC,QAAQ,GAAG,EAAf;AAEAG,MAAAA,MAAM,CAACC,IAAP,CAAYT,OAAZ,EAAqBU,OAArB,CAA6B,UAASC,GAAT,EAAa;AACtC,YAAIC,MAAM,GAAI,OAAO,KAAKV,KAAL,CAAWE,KAAlB,KAA4B,WAA5B,GAA0C,CAA1C,GAA8C,KAAKF,KAAL,CAAWE,KAAX,CAAiBO,GAAjB,CAA5D;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,MAAvB;AACA,YAAIC,MAAM,GAAGb,OAAO,CAACW,GAAD,CAAP,CAAaG,WAA1B;AACAR,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,GAAtB;AACA,YAAII,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWL,MAAM,GAAG,IAApB,CAAZ,CALsC,CAMtC;;AACA,YAAIM,QAAQ,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2BF,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACI,MAAL,KAAgB,CAA3B,CAA3B,CAAf;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ,EAAmBG,QAAnB;AACAb,QAAAA,QAAQ,CAACgB,IAAT,CACI,oBAAC,OAAD;AACI,UAAA,GAAG,EAAEV,GADT;AAEI,UAAA,KAAK,EAAEE,MAFX;AAGI,UAAA,WAAW,EAAC,MAHhB;AAII,UAAA,aAAa,EAAE,GAJnB;AAKI,UAAA,YAAY,EAAE,CALlB;AAMI,UAAA,SAAS,EAAEK,QANf;AAOI,UAAA,WAAW,EAAE,IAPjB;AAQI,UAAA,OAAO,EAAE,mBAAM;AACXZ,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,GAArB;AACH,WAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,OAvB4B,CAuB3BW,IAvB2B,CAuBtB,IAvBsB,CAA7B;AAyBA,aACI,oBAAC,GAAD;AACI,QAAA,MAAM,EAAE,KAAKpB,KAAL,CAAWqB,MADvB;AAEI,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,MAAR;AAAgBC,UAAAA,MAAM,EAAE,MAAxB;AAAgCC,UAAAA,QAAQ,EAAE;AAA1C,SAFX;AAGI,QAAA,SAAS,EAAE,KAHf;AAII,QAAA,IAAI,EAAE,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMKrB,QANL,CADJ;AAUH;AAjDL;;AAAA;AAAA,EAAkCX,SAAlC;AAoDA,eAAeI,gBAAgB,CAAC;AAC5B6B,EAAAA,MAAM,EAAE;AADoB,CAAD,CAAhB,CAEZ1B,YAFY,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper, Polygon} from 'google-maps-react';\nimport Borders from './StateBorders.js';\n\nexport class MapContainer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            guess: this.props.guess,\n            polygons: []\n        }\n    }\n\n    render() {\n        console.log('RENDER', this.props.guess);\n        let polygons = [];\n\n        Object.keys(Borders).forEach(function(key){\n            let weight = (typeof this.props.guess === 'undefined' ? 0 : this.props.guess[key]);\n            console.log('weight:', weight);\n            let coords = Borders[key].Coordinates;\n            console.log('state:', key);\n            let color = Math.round(weight * 3600);\n            //let colorStr = 'hsl(' + color + ', 100%, 50%)';\n            let colorStr = ['red', 'green', 'purple'][Math.floor(Math.random() * 3)];\n            console.log(color, colorStr);\n            polygons.push(\n                <Polygon\n                    key={key}\n                    paths={coords}\n                    strokeColor=\"#fff\"\n                    strokeOpacity={0.8}\n                    strokeWeight={1}\n                    fillColor={colorStr}\n                    fillOpacity={0.35}\n                    onClick={() => {\n                        console.log('click', key);\n                    }}\n                />\n            )\n        }.bind(this));\n\n        return(\n            <Map\n                google={this.props.google}\n                style={{width: '100%', height: '100%', position: 'relative'}}\n                className={'map'}\n                zoom={3}\n            >\n                {polygons}\n            </Map>\n        )\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyAVQ-sy1G7aUQWxuTZjNsW0I6IBzcNocmQ'\n})(MapContainer)\n"]},"metadata":{},"sourceType":"module"}